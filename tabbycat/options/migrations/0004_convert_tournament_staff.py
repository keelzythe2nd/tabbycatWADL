# Generated by Django 2.0.3 on 2018-03-19 12:25

from django.db import migrations


def convert_tournament_staff(apps, schema_editor):

    Tournament = apps.get_model('tournaments', 'Tournament')  # noqa: N806
    TournamentPreferenceModel = apps.get_model('options', 'TournamentPreferenceModel')  # noqa: N806

    old_settings = [
        ('tab_credit', "Tabulation"),
        ('org_credit', "Organisation"),
        ('adj_credit', "Adjudication")
    ]

    for tournament in Tournament.objects.all():

        new_lines = []
        old_prefs = []
        for key, name in old_settings:
            try:
                pref = TournamentPreferenceModel.objects.get(
                    section='public_features', name=key, instance_id=tournament.id)
            except TournamentPreferenceModel.DoesNotExist:
                continue
            else:
                old_prefs.append(pref)

            if pref.raw_value:
                new_lines.append("<strong>%(name)s:</strong> %(list)s" % {'name': name,
                        'list': pref.raw_value})

        new_value = "<br />".join(new_lines)

        new_pref, created = TournamentPreferenceModel.objects.get_or_create(
            section='public_features', name='tournament_staff', instance_id=tournament.id)
        if created or not new_pref.raw_value:
            new_pref.raw_value = new_value
        new_pref.save()

        for pref in old_prefs:
            pref.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('options', '0003_split_up_ballots_per_debate'),
    ]

    operations = [
        migrations.RunPython(convert_tournament_staff,
            reverse_code=migrations.RunPython.noop,
            elidable=True),
    ]
