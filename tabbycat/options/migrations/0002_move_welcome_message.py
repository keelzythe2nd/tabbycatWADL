# Generated by Django 2.0.2 on 2018-02-18 12:58

from django.db import migrations


def copy_welcome_message(apps, schema_editor):
    Tournament = apps.get_model('tournaments', 'Tournament')
    TournamentPreferenceModel = apps.get_model('options', 'TournamentPreferenceModel')

    for tournament in Tournament.objects.all():

        pref, created = TournamentPreferenceModel.objects.get_or_create(
            section='public_features', name='welcome_message', instance_id=tournament.id)
        if created or (not pref.raw_value and tournament.welcome_msg):
            pref.raw_value = tournament.welcome_msg
        pref.save()


def reverse_copy_welcome_message(apps, schema_editor):
    Tournament = apps.get_model('tournaments', 'Tournament')
    TournamentPreferenceModel = apps.get_model('options', 'TournamentPreferenceModel')

    for tournament in Tournament.objects.all():

        try:
            pref = TournamentPreferenceModel.objects.get(
                section='public_features', name='welcome_message', instance_id=tournament.id)
        except TournamentPreferenceModel.DoesNotExist:
            continue

        tournament.welcome_msg = pref.raw_value
        tournament.save()
        pref.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('options', '0001_initial'),
        ('tournaments', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(copy_welcome_message, reverse_copy_welcome_message, elidable=True),
    ]
