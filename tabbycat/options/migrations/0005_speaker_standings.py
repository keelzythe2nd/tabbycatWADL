# Generated by Django 2.0.3 on 2018-03-25 06:17

from django.db import migrations


def convert_speaker_standings_preference(apps, schema_editor):

    Tournament = apps.get_model('tournaments', 'Tournament')  # noqa: N806
    TournamentPreferenceModel = apps.get_model('options', 'TournamentPreferenceModel')  # noqa: N806

    for tournament in Tournament.objects.all():
        try:
            pref = TournamentPreferenceModel.objects.get(
                section='standings', name='rank_speakers_by', instance_id=tournament.id)
        except TournamentPreferenceModel.DoesNotExist:
            continue

        if pref.raw_value not in ['average', 'total']:
            continue

        new_pref, created = TournamentPreferenceModel.objects.get_or_create(
            section='standings', name='speaker_standings_precedence', instance_id=tournament.id,
            defaults={'raw_value': pref.raw_value})

        pref.delete()


def convert_speaker_standings_preference_reverse(apps, schema_editor):

    Tournament = apps.get_model('tournaments', 'Tournament')  # noqa: N806
    TournamentPreferenceModel = apps.get_model('options', 'TournamentPreferenceModel')  # noqa: N806

    for tournament in Tournament.objects.all():
        try:
            pref = TournamentPreferenceModel.objects.get(
                section='standings', name='speaker_standings_precedence', instance_id=tournament.id)
        except TournamentPreferenceModel.DoesNotExist:
            continue

        value = pref.raw_value.split('//')[0]  # just take the first value
        if value not in ['average', 'total']:
            continue

        new_pref, created = TournamentPreferenceModel.objects.get_or_create(
            section='standings', name='rank_speakers_by', instance_id=tournament.id,
            defaults={'raw_value': value})

        pref.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('options', '0004_convert_tournament_staff'),
    ]

    operations = [
        migrations.RunPython(convert_speaker_standings_preference,
            convert_speaker_standings_preference_reverse,
            elidable=True),
    ]
